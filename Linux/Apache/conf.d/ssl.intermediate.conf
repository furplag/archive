# this configuration supports TLS 1.2 and TLS 1.3 ( HTTP/2 enabled ) .
# requirement modules .
# - headers_module
# - http2_module
# - rewrite_module
# - socache_shmcb_module
# - ssl_module
Listen 443 https

SSLRandomSeed startup file:/dev/urandom 256
SSLRandomSeed connect builtin
SSLCryptoDevice builtin
SSLCompression off
SSLSessionTickets off

SSLPassPhraseDialog exec:/usr/libexec/httpd-ssl-pass-dialog

Protocols h2 http/1.1
ProtocolsHonorOrder On

# TLS 1.2 and TLS 1.3 ( HTTP/2 ( h2 supported ) enabled ) .
SSLProtocol -all +TLSv1.3 +TLSv1.2
SSLCipherSuite ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256;

<IfModule socache_shmcb_module>
  # SSL session caching .
  SSLSessionCache shmcb:/var/run/httpd/sslcache(512000)
  SSLSessionCacheTimeout 300

  # OCSP stapling .
  SSLUseStapling on
  SSLStaplingResponderTimeout 5
  SSLStaplingReturnResponderErrors off
  SSLStaplingCache "shmcb:logs/ssl_stapling(32768)"
</IfModule>

Header set Strict-Transport-Security "max-age=315360000; preload"

<VirtualHost *:443>
  ServerName _serverName_
  SSLEngine on

  SSLCertificateFile /_path_/_to_/_your_/_server_/_certFile_
  SSLCertificateKeyFile /_path_/_to_/_your_/_server_/_keyFile_
  SSLCertificateChainFile /_path_/_to_/_your_/_server_/_certChainFile_

  TransferLog logs/_serverName_/ssl.access.log
  ErrorLog logs/_serverName_/ssl.error.log
  <IfModule log_config_module>
    <IfModule logio_module>
      LogFormat "%h \"%{%F %T %z}t\" %{SSL_PROTOCOL}x %{SSL_CIPHER}x %{pid}P %{H2_STREAM_TAG}e %u %m \"%U\" \"%q\" %H %>s %B \"%{Referer}i\" \"%{User-agent}i\" %{H2_PUSHED}e %{H2_PUSHED_ON}e %I %O" combinedio_ssl
    </IfModule>
    SetEnvIf Request_URI &quot;\.(gif|jpg|png|ico|eot|otf|svg|ttf|woff(2)?|css|js)$&quot; nolog
    CustomLog "logs/_serverName_/ssl.request.log" combinedio_ssl env=!nolog
  </IfModule>

</VirtualHost>
