FROM furplag/steamcmd:latest

###
# steamcmd-aarch64.oci.ampere/Dockerfile_Wined
# https://github.com/furplag/archive/docker
#
# Licensed under CC-BY-NC-SA 4.0 ( https://creativecommons.org/licenses/by-nc-sa/4.0/ )
#
# a base Dockerfile that enable to use steamcmd on arm64/v8 instance ( also includes Wine64 via Pi-Apps to runs server app for Windows platform ), especially for A1.Flex-ampere.OracleLinux .#
#
# Usage
# A. docker build https://github.com/furplag/archive/raw/master/docker/steamcmd-aarch64.oci.ampere/Dockerfile_Wined -t furplag/steamcmd-wined:latest
# B. docker build https://github.com/furplag/archive/raw/master/docker/steamcmd-aarch64.oci.ampere/Dockerfile_Wined \
#    --build-arg STEAM_HOME='~/steam' \
#    ...
#    -t furplag/steamcmd-wined:latest
#

###
# ENV / variable
###
# general
ARG DEBIAN_FRONTEND=noninteractive
ARG TZ=Etc/UTC
ARG LANG='en_US.UTF-8'
ARG LANGUAGE='en_US:en'

# steamcmd ( inherited from base images )
ARG STEAM_HOME=/opt/steam
ARG STEAM_USER=steam

# wine
ARG WINE_VERSION=9.17
ARG WINE_BASE=/opt
ARG WINE_HOME=${WINE_BASE}/wine-${WINE_VERSION}

# box64
ARG BOX64_NOBANNER=1
ARG BOX64_DYNAREC_BIGBLOCK=1
ARG BOX64_DYNAREC_BLEEDING_EDGE=0
ARG BOX64_DYNAREC_STRONGMEM=2
ARG BOX64_DYNAREC_CALLRET=1
ARG BOX64_DYNAREC_FASTROUND=1
ARG BOX64_DYNAREC_FASTNAN=1
ARG BOX64_DYNAREC_SAFEFLAGS=1
ARG BOX64_DYNAREC_X87DOUBLE=0
ARG BOX64_LOG=0
ARG BOX64_TRACE_FILE=

ENV TZ=${TZ}
ENV LANG=${LANG}
ENV LANGUAGE=${LANGUAGE}

ENV STEAM_HOME=${STEAM_HOME}
ENV STEAMCMD_HOME=${STEAM_HOME}/steamcmd
ENV STEAM_LIBS_86=${STEAMCMD_HOME}/linux32
ENV STEAM_LIBS_64=${STEAMCMD_HOME}/linux64

###
# process
###

WORKDIR /
USER root
# packages ( general )
RUN dpkg --add-architecture armhf && apt-get update && apt-get upgrade -y && apt-get dist-upgrade -y && \
  DEBIAN_FRONTEND=noninteractive TZ=${TZ} apt-get install -y --no-install-recommends \
  7zip cabextract dialog libusb-1.0-0 libusb-1.0-0:armhf libxml2 libxml2:armhf p7zip-full unzip winbind x11-utils xserver-xorg-core xvfb xz-utils zip && \
  # cleanup
  apt-get autoremove --purge -y && apt-get clean autoclean && rm -rf /tmp/* /var/tmp/* /var/lib/apt/lists/*;

# wine
RUN mkdir -p ${WINE_BASE} && \
  # wine
  curl -fsSqL https://github.com/Pi-Apps-Coders/files/releases/download/large-files/wine-${WINE_VERSION}.tar.gz | tar zxf - -C ${WINE_BASE} && \
  sed -i 's/winemenubuilder.exe -a -r/winemenubuilder.exe -r/' ${WINE_HOME}/share/wine/wine.inf && \
  # to executable wine commands
  echo '#!/bin/bash' >/usr/local/bin/wine && \
  echo '' >>/usr/local/bin/wine && \
  echo 'if ! declare -p BOX64_NOBANNER >/dev/null 2>&1; then declare -r BOX64_NOBANNER='${BOX64_NOBANNER}'; fi' >>/usr/local/bin/wine && \
  echo 'if ! declare -p BOX64_DYNAREC_BIGBLOCK >/dev/null 2>&1; then declare -r BOX64_DYNAREC_BIGBLOCK='${BOX64_DYNAREC_BIGBLOCK}'; fi' >>/usr/local/bin/wine && \
  echo 'if ! declare -p BOX64_DYNAREC_BLEEDING_EDGE >/dev/null 2>&1; then declare -r BOX64_DYNAREC_BLEEDING_EDGE='${BOX64_DYNAREC_BLEEDING_EDGE}'; fi' >>/usr/local/bin/wine && \
  echo 'if ! declare -p BOX64_DYNAREC_STRONGMEM >/dev/null 2>&1; then declare -r BOX64_DYNAREC_STRONGMEM='${BOX64_DYNAREC_STRONGMEM}'; fi' >>/usr/local/bin/wine && \
  echo 'if ! declare -p BOX64_DYNAREC_CALLRET >/dev/null 2>&1; then declare -r BOX64_DYNAREC_CALLRET='${BOX64_DYNAREC_CALLRET}'; fi' >>/usr/local/bin/wine && \
  echo 'if ! declare -p BOX64_DYNAREC_FASTNAN >/dev/null 2>&1; then declare -r BOX64_DYNAREC_FASTNAN='${BOX64_DYNAREC_FASTNAN}'; fi' >>/usr/local/bin/wine && \
  echo 'if ! declare -p BOX64_DYNAREC_FASTROUND >/dev/null 2>&1; then declare -r BOX64_DYNAREC_FASTROUND='${BOX64_DYNAREC_FASTROUND}'; fi' >>/usr/local/bin/wine && \
  echo 'if ! declare -p BOX64_DYNAREC_SAFEFLAGS >/dev/null 2>&1; then declare -r BOX64_DYNAREC_SAFEFLAGS='${BOX64_DYNAREC_SAFEFLAGS}'; fi' >>/usr/local/bin/wine && \
  echo 'if ! declare -p BOX64_DYNAREC_X87DOUBLE >/dev/null 2>&1; then declare -r BOX64_DYNAREC_X87DOUBLE='${BOX64_DYNAREC_X87DOUBLE}'; fi' >>/usr/local/bin/wine && \
  echo 'if ! declare -p BOX64_LOG >/dev/null 2>&1; then declare -r BOX64_LOG='${BOX64_LOG}'; fi' >>/usr/local/bin/wine && \
  echo 'if ! declare -p BOX64_TRACE_FILE >/dev/null 2>&1; then declare -r BOX64_TRACE_FILE='${BOX64_TRACE_FILE}'; fi' >>/usr/local/bin/wine && \
  echo 'export BOX64_NOBANNER BOX64_DYNAREC_BIGBLOCK BOX64_DYNAREC_BLEEDING_EDGE BOX64_DYNAREC_STRONGMEM;' >>/usr/local/bin/wine && \
  echo 'export BOX64_DYNAREC_CALLRET BOX64_DYNAREC_FASTNAN BOX64_DYNAREC_FASTROUND BOX64_DYNAREC_SAFEFLAGS BOX64_DYNAREC_X87DOUBLE;' >>/usr/local/bin/wine && \
  echo 'if [[ ! "${BOX64_LOG:-0}" = "0" ]] && [ -n "${BOX64_TRACE_FILE:-}" ]; then export BOX64_LOG; else export BOX64_LOG=0; fi' >>/usr/local/bin/wine && \
  echo 'if [[ ! "${BOX64_LOG:-0}" = "0" ]] && [ -n "${BOX64_TRACE_FILE:-}" ]; then export BOX64_TRACE_FILE; fi' >>/usr/local/bin/wine && \
  echo "WINEPREFIX=\${HOME:-~}/.wine WINEDLLOVERRIDES=mshtml= WINEDEBUG=-all `which box64` ${WINE_HOME}/bin/wine"' "$@"' >>/usr/local/bin/wine && \
  chmod +x /usr/local/bin/wine && \
  for _bin in wineboot winecfg wineserver; do ln -fns ${WINE_HOME}/bin/${_bin} /usr/local/bin/${_bin}; done && \
  # winetricks
  curl -fsSqL https://raw.githubusercontent.com/Winetricks/winetricks/master/src/winetricks -o ${WINE_HOME}/bin/winetricks && \
  chmod +x ${WINE_HOME}/bin/winetricks && \
  # to executable winetricks commands
  echo '#!/bin/bash' >/usr/local/bin/winetricks && \
  echo '' >>/usr/local/bin/winetricks && \
  echo "W_OPT_UNATTENDED=1 ${WINE_HOME}/bin/winetricks"' "$@"' >>/usr/local/bin/winetricks && \
  chmod +x /usr/local/bin/winetricks && \
  # wine-mono
  mkdir -p ${WINE_HOME}/share/wine/mono && \
  curl -fsSqL https://dl.winehq.org/wine/wine-mono/9.3.0/wine-mono-9.3.0-x86.tar.xz | tar Jxf - -C ${WINE_HOME}/share/wine/mono && \
  # wine-gecko
  mkdir -p ${WINE_HOME}/share/wine/gecko && \
  curl -fsSqL https://dl.winehq.org/wine/wine-gecko/2.47.4/wine-gecko-2.47.4-x86_64.tar.xz | tar Jxf - -C ${WINE_HOME}/share/wine/gecko;

WORKDIR ${STEAM_HOME}
USER ${STEAM_USER}
# setup wine
RUN xvfb-run -a wine wineboot --init; sleep 2 && while pgrep -i 'wine C:' || pgrep -i 'explorer.exe'; do sleep 1; done && \
  for _f in corefonts fontfix 'sound=disabled' vcrun2022 dxvk; do xvfb-run -a winetricks -q $_f; sleep 2 && while pgrep -i 'wine C:' || pgrep -i 'explorer.exe'; do sleep 1; done; done && \
  xvfb-run -a wine wineboot -u && \
# cleanup
  [ -d "${STEAM_HOME}/.cache" ] && rm -rf "${STEAM_HOME}/.cache"/*

# cleanup
WORKDIR /
USER root
RUN apt-get autoremove --purge -y && apt-get clean autoclean && rm -rf /tmp/* /var/tmp/* /var/lib/apt/lists/*;

WORKDIR ${STEAM_HOME}
USER ${STEAM_USER}
