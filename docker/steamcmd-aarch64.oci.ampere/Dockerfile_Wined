FROM ubuntu:noble
###
# steamcmd-aarch64.oci.ampere/Dockerfile_Wined
# https://github.com/furplag/archive/docker
#
# Licensed under CC-BY-NC-SA 4.0 ( https://creativecommons.org/licenses/by-nc-sa/4.0/ )
#
# a base Dockerfile that enable to use steamcmd on arm64/v8 instance ( also includes Wine64 via Pi-Apps to runs server app for Windows platform ), especially for A1.Flex-ampere.OracleLinux .#
#
# Usage
# A. docker build https://github.com/furplag/archive/raw/master/docker/steamcmd-aarch64.oci.ampere/Dockerfile_Wined -t furplag/steamcmd-wined:latest
# B. docker build https://github.com/furplag/archive/raw/master/docker/steamcmd-aarch64.oci.ampere/Dockerfile_Wined \
#     --build-arg STEAM_HOME='~/steam' \
#     ...
#     -t furplag/steamcmd-wined:latest
#

###
# ENV / variable
###
# general
ARG DEBIAN_FRONTEND=noninteractive
ARG TZ=Etc/UTC
ARG LANG='en_US.UTF-8'
ARG LANGUAGE='en_US:en'

# steamcmd
ARG STEAM_HOME=/opt/steam
ARG STEAM_USER=steam
ARG STEAM_USER_ID=12001
ARG STEAM_GROUP_ID=12001

ENV TZ=${TZ}
ENV LANG=${LANG}
ENV LANGUAGE=${LANGUAGE}

ENV STEAM_HOME=${STEAM_HOME}
ENV STEAMCMD_HOME=${STEAM_HOME}/steamcmd
ENV STEAM_LIBS_86=${STEAMCMD_HOME}/linux32
ENV STEAM_LIBS_64=${STEAMCMD_HOME}/linux64

###
# process
###
# packages ( general )
WORKDIR /
USER root
RUN apt-get update && apt-get upgrade -y && apt-get dist-upgrade -y;
RUN DEBIAN_FRONTEND=noninteractive TZ=${TZ} apt-get install -y ca-certificates curl dialog gnupg locales \
  screen sudo tar tzdata winbind xfce4 xfce4-session xvfb xz-utils;

# packages ( Box86 / 64 dependencies )
RUN dpkg --add-architecture armhf && apt-get update && apt-get upgrade -y && apt-get dist-upgrade -y;
RUN apt-get install -y \
  gcc-arm-linux-gnueabihf libc6-dev-armhf-cross \
  libc6:armhf libcal3d12t64:armhf libcups2t64:armhf libcurl4t64:armhf libncurses6:armhf \
  libegl1:armhf libgdk-pixbuf2.0-0:armhf libgl1:armhf libgles2:armhf libglx-mesa0:armhf \
  libgssapi-krb5-2:armhf libgtk-3-0t64:armhf libgtk2.0-0t64:armhf libjpeg62:armhf libkrb5-3:armhf \
  libopenal1:armhf libpng16-16t64:armhf libsdl-image1.2:armhf libsdl-mixer1.2:armhf \
  libsdl-net1.2:armhf libsdl-sound1.2:armhf libsdl-ttf2.0-0:armhf libsdl1.2debian:armhf \
  libsdl2-2.0-0:armhf libsdl2-image-2.0-0:armhf libsdl2-net-2.0-0:armhf libsdl2-ttf-2.0-0:armhf \
  libsmpeg0t64:armhf libssh-gcrypt-4:armhf libssl3t64:armhf libstdc++6:armhf libudev1:armhf \
  libvorbisfile3:armhf libx11-6:armhf mesa-va-drivers:armhf osspd:armhf;

# user / group
RUN groupadd -g ${STEAM_GROUP_ID} ${STEAM_USER} && useradd -u ${STEAM_USER_ID} -g ${STEAM_GROUP_ID} -m ${STEAM_USER_OPTS} -d ${STEAM_HOME} -s /sbin/nologin ${STEAM_USER};
RUN  usermod -aG sudo ${STEAM_USER} && echo '%sudo ALL=NOPASSWD:ALL' >/etc/sudoers.d/999_${STEAM_USER};

# Pi-Apps
WORKDIR ${STEAM_HOME}
USER ${STEAM_USER}
RUN echo 'xfce4-session' >${STEAM_HOME}/.xsession;
RUN curl -fLsS https://raw.githubusercontent.com/Botspot/pi-apps/master/install | bash;
# box86
RUN xvfb-run -a pi-apps/manage install 'Box86';
# box64
RUN xvfb-run -a pi-apps/manage install 'Box64';
# wine
RUN xvfb-run -a pi-apps/manage install 'Wine (x64)';


# steamcmd
WORKDIR ${STEAM_HOME}
USER ${STEAM_USER}
RUN for _script in steamcmd.update steamapp.update; do curl -fL https://github.com/furplag/archive/raw/master/docker/steamcmd-aarch64.oci.ampere/${_script} -o ${STEAM_HOME}/${_script} && chmod +x ${STEAM_HOME}/${_script}; done;
RUN mkdir -p ${STEAMCMD_HOME};

WORKDIR ${STEAMCMD_HOME}
USER ${STEAM_USER}
RUN curl -fsSqL https://steamcdn-a.akamaihd.net/client/installer/steamcmd_linux.tar.gz | tar zxvf -;

WORKDIR ${STEAM_HOME}
USER ${STEAM_USER}
RUN cat ${STEAM_HOME}/steamcmd.update | bash;

# cleanup
WORKDIR /
USER root
RUN apt-get autoremove -y;
RUN apt-get clean autoclean && rm -rf /tmp/* /var/tmp/* /var/lib/apt/lists;

# current user / directory
WORKDIR ${STEAM_HOME}
USER ${STEAM_USER}
