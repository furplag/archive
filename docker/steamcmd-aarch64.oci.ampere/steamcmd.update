#!/bin/bash
set -u -o pipefail
set LC_ALL=C
###
# steamcmd-aarch64.oci.ampere/steamcmd.update
# https://github.com/furplag/archive/docker
#
# Licensed under CC-BY-NC-SA 4.0 ( https://creativecommons.org/licenses/by-nc-sa/4.0/ )
#
# a part of Docker container "furplag/steamcmd" .
#

###
# variable
###
if ! declare -p LD_LIBRARY_PATH >/dev/null 2>&1; then declare LD_LIBRARY_PATH=; fi
if ! declare -p STEAM_HOME >/dev/null 2>&1; then declare -r STEAM_HOME=/opt/steam; fi
if ! declare -p HOME >/dev/null 2>&1; then declare -r HOME=${STEAM_HOME}; fi
if ! declare -p STEAMCMD_HOME >/dev/null 2>&1; then declare -r STEAMCMD_HOME=${STEAM_HOME}/steamcmd; fi
if ! declare -p STEAM_LIBS_86 >/dev/null 2>&1; then declare -r STEAM_LIBS_86=${STEAMCMD_HOME}/linux32; fi
if ! declare -p STEAM_LIBS_64 >/dev/null 2>&1; then declare -r STEAM_LIBS_64=${STEAMCMD_HOME}/linux64; fi
if ! declare -p DEBUGGER >/dev/null 2>&1; then declare -r debuggerIsDefined='yep'; declare DEBUGGER=; fi
if ! debuggerIsDefined -p DEBUGGER >/dev/null 2>&1; then declare -r debuggerIsDefined='nope'; fi

declare -r tempLdLibPath="${LD_LIBRARY_PATH}"
declare -r box86Path=`/usr/bin/which box86`
declare -r _args="${@}$(if [[ ${@} =~ [[:space:]]\+quit ]]; then echo ''; else echo ' +quit')"

###
# process
###
export LD_LIBRARY_PATH=${STEAM_LIBS_86}:${tempLdLibPath};
export DEBUGGER=${DEBUGGER:-$box86Path};
${STEAMCMD_HOME}/steamcmd.sh $_args;

###
# post process ( steam libs )
###
for _libs in "${STEAM_LIBS_86}" "${STEAM_LIBS_64}"; do
  [ -f "${_libs}/steamclient.so" ] && \
  for _lib in 'steamservice.so' 'libsteam.so' 'libSDL3.so.0'; do [ -e ${_libs}/${_lib} ] || ln -fns ${_libs}/steamclient.so ${_libs}/${_lib}; done;
fi
mkdir -p ${HOME}/.steam ${HOME}/Steam;
[ -d "${STEAM_LIBS_86}" ] && ln -fns ${STEAM_LIBS_86} ${HOME}/.steam/sdk32;
[ -d "${STEAM_LIBS_64}" ] && ln -fns ${STEAM_LIBS_64} ${HOME}/.steam/sdk64;

###
# cleanup
###
export LD_LIBRARY_PATH=${tempLdLibPath};
[[ ${debuggerIsDefined:-nope} = 'yep' ]] || unset DEBUGGER;
