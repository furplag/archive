#!/bin/bash
set -u -o pipefail
LC_ALL=C.UTF-8

###
# steamcmd-aarch64.oci.ampere/steamapp.update
# https://github.com/furplag/archive/docker
#
# Licensed under CC-BY-NC-SA 4.0 ( https://creativecommons.org/licenses/by-nc-sa/4.0/ )
#
# a part of Docker container "steamcmd-aarch64.oci.ampere" .
#

###
# variable
###
if ! declare -p STEAM_HOME >/dev/null 2>&1; then declare -r STEAM_HOME=/opt/steam; fi
if ! declare -p HOME >/dev/null 2>&1; then declare -r HOME=${STEAM_HOME}; fi
if ! declare -p STEAMCMD_HOME >/dev/null 2>&1; then declare -r STEAMCMD_HOME=${STEAM_HOME}/steamcmd; fi

if ! declare -p STEAMAPP_ID >/dev/null 2>&1; then declare -r STEAMAPP_ID=; fi
if ! declare -p STEAMAPP_NAME >/dev/null 2>&1; then declare -r STEAMAPP_NAME=${STEAMAPP_ID}; fi
if ! declare -p STEAMAPP_HOME >/dev/null 2>&1; then declare -r STEAMAPP_HOME=${STEAM_HOME}/${STEAMAPP_NAME}; fi
if ! declare -p STEAMAPP_PLATFORM_TYPE >/dev/null 2>&1; then declare -r STEAMAPP_PLATFORM_TYPE=linux; fi

[ -z "${STEAMAPP_ID}" ] && echo '[ERROR] "STEAMAPP_ID" must not be empty .' && exit 1;

declare -r platformType="$(if [ -n "${STEAMAPP_PLATFORM_TYPE:-}" ] && [[ ',linux,macos,windows,' =~ ",${STEAMAPP_PLATFORM_TYPE,,}," ]]; then echo "${STEAMAPP_PLATFORM_TYPE,,}"; else echo ''; fi)"
declare -r steamcmdArgs="$(if [ -n "${platformType}" ]; then echo " +@sSteamCmdForcePlatformType ${platformType}"; else echo ''; fi) +force_install_dir ${STEAMAPP_HOME} +login anonymous +app_update ${STEAMAPP_ID} validate +quit"

###
# process
###
cat ${STEAM_HOME}/steamcmd.update | bash -s -- "${steamcmdArgs}";
