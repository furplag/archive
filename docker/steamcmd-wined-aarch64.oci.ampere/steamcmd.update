#!/bin/bash
set -u -o pipefail
set LC_ALL=C
###
# steamcmd-wined-aarch64.oci.ampere/steamcmd.update
# https://github.com/furplag/archive/docker
#
# Licensed under CC-BY-NC-SA 4.0 ( https://creativecommons.org/licenses/by-nc-sa/4.0/ )
#
# a part of Docker container "furplag/steamcmd-wined" .
#

###
# variable
###
if ! declare -p LD_LIBRARY_PATH >/dev/null 2>&1; then declare LD_LIBRARY_PATH=; fi
if ! declare -p STEAM_HOME >/dev/null 2>&1; then declare -r STEAM_HOME=/opt/steam; fi
if ! declare -p STEAMCMD_HOME >/dev/null 2>&1; then declare -r STEAMCMD_HOME=${STEAM_HOME}/steamcmd; fi
if ! declare -p STEAM_LIBS_86 >/dev/null 2>&1; then declare -r STEAM_LIBS_86=${STEAMCMD_HOME}/linux32; fi
if ! declare -p STEAM_LIBS_64 >/dev/null 2>&1; then declare -r STEAM_LIBS_64=${STEAMCMD_HOME}/linux64; fi

declare -r tempLdLibPath="${LD_LIBRARY_PATH}"

###
# process
###
export LD_LIBRARY_PATH=${STEAM_LIBS_86}:${tempLdLibPath};

# no one take care of the result, just there is only to avoid errors caused by anonymous access .
declare result=`${STEAMCMD_HOME}/steamcmd.sh +quit`;
mkdir -p ${STEAM_HOME}/.steam ${STEAM_HOME}/Steam;
if [[ -d "${STEAM_LIBS_86}" ]]; then
  ln -fns ${STEAM_LIBS_86} ${STEAMCMD_HOME}/sdk32;
  ln -fns ${STEAM_LIBS_86} ${STEAM_HOME}/.steam/sdk32;
  ln -fns ${STEAM_LIBS_86} ${STEAM_HOME}/Steam/sdk32;
fi
if [[ -d "${STEAM_LIBS_64}" ]]; then
  ln -fns ${STEAM_LIBS_64} ${STEAMCMD_HOME}/sdk64;
  ln -fns ${STEAM_LIBS_64} ${STEAM_HOME}/.steam/sdk64;
  ln -fns ${STEAM_LIBS_64} ${STEAM_HOME}/Steam/sdk64;
fi

###
# cleanup
###
export LD_LIBRARY_PATH=${tempLdLibPath};
