#!/bin/bash
set -ue -o pipefail
set LC_ALL=C
###
# boxed-wine-aarch64.oci.ampere/wine.install
# https://github.com/furplag/archive/docker
#
# Licensed under CC-BY-NC-SA 4.0 ( https://creativecommons.org/licenses/by-nc-sa/4.0/ )
#
# a part of Docker container "boxed_wine-aarch64.oci.ampere" .
#
# Usage
# A. curl -fLsS https://github.com/furplag/archive/raw/master/docker/boxed-wine-aarch64.oci.ampere/wine.install | \
#    WINE_BRANCH="stable" WINE_VERSION="7.0.2" bash;

###
# ENV / variable
###
if ! declare -p WINE_BRANCH >/dev/null 2>&1; then declare WINE_BRANCH=stable; fi
if ! declare -p WINE_VERSION >/dev/null 2>&1; then declare -r WINE_VERSION=7.0.2; fi
if ! declare -p WINE_RELEASE >/dev/null 2>&1; then declare -r WINE_RELEASE=1; fi
if ! declare -p WINEDLLOVERRIDES >/dev/null 2>&1; then declare -r WINEDLLOVERRIDES="mscoree,mshtml="; fi
if ! declare -p WINEDEBUG >/dev/null 2>&1; then declare -r WINEDEBUG="-all"; fi
if ! declare -p W_OPT_UNATTENDED >/dev/null 2>&1; then declare -r W_OPT_UNATTENDED="1"; fi
if ! declare -p BOX86_NOBANNER >/dev/null 2>&1; then declare -r BOX86_NOBANNER="1"; fi
if ! declare -p BOX64_NOBANNER >/dev/null 2>&1; then declare -r BOX64_NOBANNER="1"; fi

declare -r _os_version=`cat /etc/os-release | grep CODENAME= | sed -e 's/^.*=//'`
declare -r _release="$(if [[ "${WINE_RELEASE:-}" = '' ]]; then echo ''; else echo '-'; fi)${WINE_RELEASE}"
declare -r _repoUrlBase="https://dl.winehq.org/wine-builds/$(cat /etc/os-release | grep -E ^ID= | sed -e 's/^.*=//')/dists/${_os_version}/main"
declare -ar _sources=(
  "${_repoUrlBase}/binary-amd64/wine-${WINE_BRANCH}-amd64_${WINE_VERSION}~${_os_version}${_release}_amd64.deb"
  "${_repoUrlBase}/binary-amd64/wine-${WINE_BRANCH}_${WINE_VERSION}~${_os_version}${_release}_amd64.deb"
  "${_repoUrlBase}/binary-i386/wine-${WINE_BRANCH}-i386_${WINE_VERSION}~${_os_version}${_release}_i386.deb"
)
declare -ar _dependencies=(
  'libasound2'
  'libasound2-plugins'
  'libc6'
  'libcairo2'
  'libcap2-bin'
  'libcups2'
  'libdbus-1-3'
  'libfaudio0'
  'libfontconfig1'
  'libfreetype6'
  'libglib2.0-0'
  'libglu1-mesa'
  'libgnutls30'
  'libgphoto2-6'
  'libgphoto2-port12'
  'libgssapi-krb5-2'
  'libgstreamer-plugins-base1.0-0'
  'libgstreamer1.0-0'
  'libgtk-3-0'
  'libkrb5-3'
  'libldap-2.5-0'
  'libncurses6'
  'libodbc1'
  'libopenal1'
  'libosmesa6'
  'libpcap0.8'
  'libpulse0'
  'libsane1'
  'libsdl2-2.0-0'
  'libstb0'
  'libudev1'
  'libusb-1.0-0'
  'libv4l-0'
  'libva-drm2'
  'libva-x11-2'
  'libva2'
  'libvkd3d1'
  'libx11-6'
  'libxcomposite1'
  'libxcursor1'
  'libxext6'
  'libxfixes3'
  'libxi6'
  'libxinerama1'
  'libxrandr2'
  'libxrender1'
  'libxxf86vm1'
  'ocl-icd-libopencl1'
  'winbind'
  'zenity'
)

###
# process
###
dpkg --add-architecture armhf && apt-get update && apt-get upgrade && apt-get dist-upgrade -y

# install wine, wine64 and winetricks dependencies
apt-get install -y $(echo "${_dependencies[@]}" | sed -e 's/ /:armhf /g'):armhf;
apt-get install -y "${_dependencies[@]}" cabextract wget xvfb;

# download Wine, then install .
[ -d /opt/wine/.tmp/extracted ] || mkdir -p /opt/wine/.tmp/extracted
for _source in "${_sources[@]}"; do _deb="$(echo "${_source}" | sed -e 's/^.*\///')"; curl -fL ${_source} -o /opt/wine/.tmp/${_deb} && dpkg-deb -vx /opt/wine/.tmp/${_deb} /opt/wine/.tmp/extracted; done;
mv /opt/wine/.tmp/extracted/opt/wine*/* /opt/wine;

# setting up commands .
cat <<_EOT_> /usr/local/bin/wine
#!/bin/sh
WINEPREFIX=~/.wine WINEARCH=win32 BOX86_NOBANNER=1 box86 /opt/wine/bin/wine \$@
_EOT_
chmod +x /usr/local/bin/wine;

cat <<_EOT_> /usr/local/bin/wine64
#!/bin/sh
WINEPREFIX=~/.wine64 WINEARCH=win64 box64 /opt/wine/bin/wine64 \$@
_EOT_
chmod +x /usr/local/bin/wine64;

cat <<_EOT_> /usr/local/bin/wineserver
#!/bin/sh
WINEPREFIX=~/.wine64 WINEARCH=win64 box64 /opt/wine/bin/wineserver \$@
_EOT_
chmod +x /usr/local/bin/wineserver;

ln -fns /opt/wine/bin/wineboot /usr/local/bin/wineboot
ln -fns /opt/wine/bin/winecfg /usr/local/bin/winecfg

# environment
cat <<_EOT_> /etc/profile.d/wine.sh
\# /etc/profile.d/wine.sh
export WINEDLLOVERRIDES="${WINEDLLOVERRIDES}"
export WINEDEBUG="${WINEDEBUG}"
export W_OPT_UNATTENDED="${W_OPT_UNATTENDED}"
export BOX86_NOBANNER="${BOX86_NOBANNER}"
export BOX64_NOBANNER="${BOX64_NOBANNER}"
_EOT_

# winetricks
curl -fL https://raw.githubusercontent.com/Winetricks/winetricks/master/src/winetricks \
  -o /opt/wine/winetricks && chmod +x /opt/wine/winetricks;
ln -fns /opt/wine/winetricks /usr/local/bin/winetricks;

# cleanup
apt-get clean autoclean && rm -rf /opt/wine/.tmp
