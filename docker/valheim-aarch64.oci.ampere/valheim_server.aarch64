#!/bin/bash
set -o pipefail
set LC_ALL=C
###
# valheim-aarch64.oci.ampere/valheim_server.aarch64
# https://github.com/furplag/archive/docker
#
# Licensed under CC-BY-NC-SA 4.0 ( https://creativecommons.org/licenses/by-nc-sa/4.0/ )
#
# a part of Docker container "valheim-aarch64.oci.ampere" .
#

###
# ENV / variable
###
if ! declare -p LD_LIBRARY_PATH >/dev/null 2>&1; then declare LD_LIBRARY_PATH=; fi

# ENV / variable: steamcmd
if ! declare -p STEAM_HOME >/dev/null 2>&1; then declare -r STEAM_HOME=/opt/valheim; fi
if ! declare -p STEAMCMD_HOME >/dev/null 2>&1; then declare -r STEAMCMD_HOME=${STEAM_HOME}/steamcmd; fi
if ! declare -p STEAM_LIBS_86 >/dev/null 2>&1; then declare -r STEAM_LIBS_86=${STEAMCMD_HOME}/linux32; fi
if ! declare -p STEAM_LIBS_64 >/dev/null 2>&1; then declare -r STEAM_LIBS_64=${STEAMCMD_HOME}/linux64; fi
if ! declare -p VALHEIM_HOME >/dev/null 2>&1; then declare -r VALHEIM_HOME=${STEAM_HOME}/valheim; fi
if ! declare -p VALHEIM_APP_ID >/dev/null 2>&1; then declare -r VALHEIM_APP_ID='896660'; fi
if ! declare -p VALHEIM_STEAMAPP_ID >/dev/null 2>&1; then declare -r VALHEIM_STEAMAPP_ID='892970'; fi

# ENV / variable: valheim
if ! declare -p VALHEIM_NAME >/dev/null 2>&1; then declare -r VALHEIM_NAME='Valheim'; fi
if ! declare -p VALHEIM_WORLD >/dev/null 2>&1; then declare -r VALHEIM_WORLD='Dedicated'; fi
if ! declare -p VALHEIM_PORT >/dev/null 2>&1; then declare -r VALHEIM_PORT='2456'; fi
if ! declare -p VALHEIM_PASSWORD >/dev/null 2>&1; then declare -r VALHEIM_PASSWORD='s3CRet'; fi
if ! declare -p VALHEIM_SAVE_DIR >/dev/null 2>&1; then declare -r VALHEIM_SAVE_DIR=${VALHEIM_HOME}/_saves; fi
if ! declare -p VALHEIM_LOG_DIR >/dev/null 2>&1; then declare -r VALHEIM_LOG_DIR=${VALHEIM_HOME}/_logs; fi
if ! declare -p VALHEIM_IS_PUBLIC >/dev/null 2>&1; then declare -r VALHEIM_IS_PUBLIC='FALSE'; fi
if ! declare -p VALHEIM_CROSSPLAY_ENABLED >/dev/null 2>&1; then declare -r VALHEIM_CROSSPLAY_ENABLED='FALSE'; fi
if ! declare -p VALHEIM_SAVE_INTERVAL >/dev/null 2>&1; then declare -r VALHEIM_SAVE_INTERVAL='1800'; fi
if ! declare -p VALHEIM_BACKUPS >/dev/null 2>&1; then declare -r VALHEIM_BACKUPS='4'; fi
if ! declare -p VALHEIM_BACKUP_SHORT >/dev/null 2>&1; then declare -r VALHEIM_BACKUP_SHORT='7200'; fi
if ! declare -p VALHEIM_BACKUP_LONG >/dev/null 2>&1; then declare -r VALHEIM_BACKUP_LONG='43200'; fi
if ! declare -p VALHEIM_SERVER_UPDATE_ENABLED >/dev/null 2>&1; then declare -r VALHEIM_SERVER_UPDATE_ENABLED='TRUE'; fi

declare -ar _modifier_combat_values=(veryeasy easy hard veryhard)
if ! declare -p VALHEIM_SERVER_MODIFIER_COMBAT >/dev/null 2>&1; then declare -r VALHEIM_SERVER_MODIFIER_COMBAT=; fi
declare -r _modifier_combat="$(if [[ " ${_modifier_combat_values[*]} " =~ " ${VALHEIM_SERVER_MODIFIER_COMBAT:-easy} " ]]; then echo "${VALHEIM_SERVER_MODIFIER_COMBAT:-easy}"; else echo 'easy'; fi)"

declare -ar _modifier_deathpenalty_values=(casual veryeasy easy hard hardcore)
if ! declare -p VALHEIM_SERVER_MODIFIER_DEATHPENALTY >/dev/null 2>&1; then declare -r VALHEIM_SERVER_MODIFIER_DEATHPENALTY=; fi
declare -r _modifier_deathpenalty="$(if [[ " ${_modifier_deathpenalty_values[*]} " =~ " ${VALHEIM_SERVER_MODIFIER_DEATHPENALTY:-casual} " ]]; then echo "${VALHEIM_SERVER_MODIFIER_DEATHPENALTY:-casual}"; else echo 'casual'; fi)"

declare -ar _modifier_portals_values=(casual hard veryhard)
if ! declare -p VALHEIM_SERVER_MODIFIER_PORTALS >/dev/null 2>&1; then declare -r VALHEIM_SERVER_MODIFIER_PORTALS=; fi
declare -r _modifier_portals="$(if [[ " ${_modifier_portals_values[*]} " =~ " ${VALHEIM_SERVER_MODIFIER_PORTALS:-hard} " ]]; then echo "${VALHEIM_SERVER_MODIFIER_PORTALS:-hard}"; else echo 'hard'; fi)"

declare -ar _modifier_raids_values=(none muchless less more muchmore)
if ! declare -p VALHEIM_SERVER_MODIFIER_RAIDS >/dev/null 2>&1; then declare -r VALHEIM_SERVER_MODIFIER_RAIDS=; fi
declare -r _modifier_raids="$(if [[ " ${_modifier_raids_values[*]} " =~ " ${VALHEIM_SERVER_MODIFIER_RAIDS:-less} " ]]; then echo "${VALHEIM_SERVER_MODIFIER_RAIDS:-less}"; else echo 'less'; fi)"

declare -ar _modifier_resources_values=(muchless less more muchmore most)
if ! declare -p VALHEIM_SERVER_MODIFIER_RESOURCES >/dev/null 2>&1; then declare -r VALHEIM_SERVER_MODIFIER_RESOURCES=; fi
declare -r _modifier_resources="$(if [[ " ${_modifier_resources_values[*]} " =~ " ${VALHEIM_SERVER_MODIFIER_RESOURCES:-more} " ]]; then echo "${VALHEIM_SERVER_MODIFIER_RESOURCES:-more}"; else echo 'more'; fi)"

declare -a _keys=;
if ! declare -p VALHEIM_SERVER_MODIFIER_NOBUILDCOST >/dev/null 2>&1; then declare -r VALHEIM_SERVER_MODIFIER_NOBUILDCOST='FALSE'; fi
if ! declare -p VALHEIM_SERVER_MODIFIER_PLAYEREVENTS >/dev/null 2>&1; then declare -r VALHEIM_SERVER_MODIFIER_PLAYEREVENTS='FALSE'; fi
if ! declare -p VALHEIM_SERVER_MODIFIER_PASSIVEMOBS >/dev/null 2>&1; then declare -r VALHEIM_SERVER_MODIFIER_PASSIVEMOBS='FALSE'; fi
if ! declare -p VALHEIM_SERVER_MODIFIER_NOMAP >/dev/null 2>&1; then declare -r VALHEIM_SERVER_MODIFIER_NOMAP='FALSE'; fi
if [[ "${VALHEIM_SERVER_MODIFIER_NOBUILDCOST^^}" = 'TRUE' ]]; then _keys+='-setkey nobuildcost'; fi
if [[ "${VALHEIM_SERVER_MODIFIER_PLAYEREVENTS^^}" = 'TRUE' ]]; then _keys+='-setkey playerevents'; fi
if [[ "${VALHEIM_SERVER_MODIFIER_PASSIVEMOBS^^}" = 'TRUE' ]]; then _keys+='-setkey passivemobs'; fi
if [[ "${VALHEIM_SERVER_MODIFIER_NOMAP^^}" = 'TRUE' ]]; then _keys+='-setkey nomap'; fi

###
# process
###
[ -d "${VALHEIM_SAVE_DIR:-/}" ] || mkdir -p "${VALHEIM_SAVE_DIR}"

# update, if allowed .
if [[  "${VALHEIM_SERVER_UPDATE_ENABLED^^}" = 'TRUE' ]]; then 
  declare -r tempLdLibPath="${LD_LIBRARY_PATH}"
  ${STEAM_HOME}/valheim_server.update
  export LD_LIBRARY_PATH=${tempLdLibPath}
fi

# start Valheim Server .
export LD_LIBRARY_PATH=${VALHEIM_HOME}/linux64:${STEAM_LIBS_64}:${tempLdLibPath}
export SteamAppId=${VALHEIM_STEAMAPP_ID}

/usr/local/bin/box64 ${VALHEIM_HOME}/valheim_server.x86_64 -nographics -batchmode \
  -name "${VALHEIM_NAME}" \
  -world "${VALHEIM_WORLD}" \
  -password "${VALHEIM_PASSWORD}" \
  -port "${VALHEIM_PORT}" \
  -public "$(if [[ "${VALHEIM_IS_PUBLIC^^}" = 'TRUE' ]]; then echo '1'; else echo '0'; fi)" \
  "$(if [[ "${VALHEIM_CROSSPLAY_ENABLED^^}" = 'TRUE' ]]; then echo '-crossplay'; else echo ''; fi)" \
  -savedir "${VALHEIM_SAVE_DIR}" \
  -saveinterval ${VALHEIM_SAVE_INTERVAL} \
  -backups ${VALHEIM_BACKUPS} \
  -backupshort ${VALHEIM_BACKUP_SHORT} \
  -backuplong ${VALHEIM_BACKUP_LONG} \
  -logFile "${VALHEIM_LOG_DIR}/${VALHEIM_NAME}-${VALHEIM_WORLD}.log" \
  -modifier combat ${_modifer_combat,,} \
  -modifier deathpenalty ${_modifer_deathpenalty,,} \
  -modifier portals ${_modifer_portals,,} \
  -modifier raids ${_modifer_raids,,} \
  -modifier reources ${_modifer_resources,,} \
  "$(if [[ "${_keys[@]}" = '' ]]; then echo ''; else echo "${_keys[@]}"; fi)"-instanceid '1' \
;

trap "kill -SIGINT $!;" SIGTERM

# Wait for server to exit
while wait $!; [ $? != 0 ]; do true; done

export LD_LIBRARY_PATH=${tempLdLibPath}
