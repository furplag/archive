#!/bin/bash
set -o pipefail
set LC_ALL=C
###
# valheim-aarch64.oci.ampere/valheim_server.aarch64
# https://github.com/furplag/archive/docker
#
# Licensed under CC-BY-NC-SA 4.0 ( https://creativecommons.org/licenses/by-nc-sa/4.0/ )
#
# a part of Docker container "valheim-aarch64.oci.ampere" .
#

###
# ENV / variable
###
if ! declare -p LD_LIBRARY_PATH >/dev/null 2>&1; then declare LD_LIBRARY_PATH=; fi

# ENV / variable: steamcmd
# SteamCMD directory .
if ! declare -p STEAM_HOME >/dev/null 2>&1; then declare -r STEAM_HOME=/opt/steam; fi
if ! declare -p STEAMCMD_HOME >/dev/null 2>&1; then declare -r STEAMCMD_HOME=${STEAM_HOME}/steamcmd; fi
if ! declare -p STEAM_LIBS_86 >/dev/null 2>&1; then declare -r STEAM_LIBS_86=${STEAMCMD_HOME}/linux32; fi
if ! declare -p STEAM_LIBS_64 >/dev/null 2>&1; then declare -r STEAM_LIBS_64=${STEAMCMD_HOME}/linux64; fi
# Steam App ID ( Valheim dedicated server, may NOT be modify ) .
if ! declare -p VALHEIM_APP_ID >/dev/null 2>&1; then declare -r VALHEIM_APP_ID=896660; fi
# Steam App ID ( Valheim, may NOT be modify ) .
if ! declare -p VALHEIM_STEAMAPP_ID >/dev/null 2>&1; then declare -r VALHEIM_STEAMAPP_ID=892970; fi
# a toggle to update automatically or not if available .
if ! declare -p VALHEIM_SERVER_UPDATE_ENABLED >/dev/null 2>&1; then declare -r VALHEIM_SERVER_UPDATE_ENABLED='TRUE'; fi
# Valheim server directory .
if ! declare -p VALHEIM_HOME >/dev/null 2>&1; then declare -r VALHEIM_HOME=${STEAM_HOME}/valheim; fi

# ENV / variable: valheim
# Server name to be display on server list .
if ! declare -p VALHEIM_NAME >/dev/null 2>&1; then declare -r VALHEIM_NAME=Valheim; fi
# world name to be display on server list .
if ! declare -p VALHEIM_WORLD >/dev/null 2>&1; then declare -r VALHEIM_WORLD=Dedicated; fi
# password to connecting server ( should be set the password your own ) .
if ! declare -p VALHEIM_PASSWORD >/dev/null 2>&1; then declare -r VALHEIM_PASSWORD=s3CRet; fi
# port to connecting server .
if ! declare -p VALHEIM_PORT >/dev/null 2>&1; then declare -r VALHEIM_PORT=2456; fi
# a toggle to appear or hide in server list .
if ! declare -p VALHEIM_IS_PUBLIC >/dev/null 2>&1; then declare -r VALHEIM_IS_PUBLIC='FALSE'; fi
# a toggle enable to play with XBox user .
if ! declare -p VALHEIM_CROSSPLAY_ENABLED >/dev/null 2>&1; then declare -r VALHEIM_CROSSPLAY_ENABLED='FALSE'; fi
# unique ID to running multiple servers . 
if ! declare -p VALHEIM_INSTANCEID >/dev/null 2>&1; then declare -r VALHEIM_INSTANCEID=1; fi

# savedata directory .
if ! declare -p VALHEIM_SAVE_DIR >/dev/null 2>&1; then declare -r VALHEIM_SAVE_DIR="${VALHEIM_HOME}/_saves"; fi
# how often the world will save in seconds .
if ! declare -p VALHEIM_SAVE_INTERVAL >/dev/null 2>&1; then declare -r VALHEIM_SAVE_INTERVAL=1800; fi
# how many automatic backups will be kept .
if ! declare -p VALHEIM_BACKUPS >/dev/null 2>&1; then declare -r VALHEIM_BACKUPS=4; fi
# an interval between the first automatic backups in seconds .
if ! declare -p VALHEIM_BACKUP_SHORT >/dev/null 2>&1; then declare -r VALHEIM_BACKUP_SHORT=7200; fi
# an interval between the subsequent automatic backups in seconds .
if ! declare -p VALHEIM_BACKUP_LONG >/dev/null 2>&1; then declare -r VALHEIM_BACKUP_LONG=43200; fi

# log directory .
if ! declare -p VALHEIM_LOG_DIR >/dev/null 2>&1; then declare -r VALHEIM_LOG_DIR="${VALHEIM_HOME}/_logs"; fi

# world modifier
if ! declare -p VALHEIM_MODIFIER_COMBAT >/dev/null 2>&1; then declare -r VALHEIM_MODIFIER_COMBAT=; fi
if ! declare -p VALHEIM_MODIFIER_DEATHPENALTY >/dev/null 2>&1; then declare -r VALHEIM_MODIFIER_DEATHPENALTY=; fi
if ! declare -p VALHEIM_MODIFIER_PORTALS >/dev/null 2>&1; then declare -r VALHEIM_MODIFIER_PORTALS=; fi
if ! declare -p VALHEIM_MODIFIER_RAIDS >/dev/null 2>&1; then declare -r VALHEIM_MODIFIER_RAIDS=; fi
if ! declare -p VALHEIM_MODIFIER_RESOURCES >/dev/null 2>&1; then declare -r VALHEIM_MODIFIER_RESOURCES=; fi

# world modifier ( toggles )
if ! declare -p VALHEIM_MODIFIER_NOBUILDCOST >/dev/null 2>&1; then declare -r VALHEIM_MODIFIER_NOBUILDCOST='FALSE'; fi
if ! declare -p VALHEIM_MODIFIER_PLAYEREVENTS >/dev/null 2>&1; then declare -r VALHEIM_MODIFIER_PLAYEREVENTS='FALSE'; fi
if ! declare -p VALHEIM_MODIFIER_PASSIVEMOBS >/dev/null 2>&1; then declare -r VALHEIM_MODIFIER_PASSIVEMOBS='FALSE'; fi
if ! declare -p VALHEIM_MODIFIER_NOMAP >/dev/null 2>&1; then declare -r VALHEIM_MODIFIER_NOMAP='FALSE'; fi

declare -a _options=(
  -nographics
  -batchmode
  -name "${VALHEIM_NAME}"
  -world "${VALHEIM_WORLD}"
  -password "${VALHEIM_PASSWORD}"
  -port "${VALHEIM_PORT}"
  -public "$(if [[ "${VALHEIM_IS_PUBLIC^^}" = 'TRUE' ]]; then echo '1'; else echo '0'; fi)"
  -savedir "${VALHEIM_SAVE_DIR}"
  -saveinterval "${VALHEIM_SAVE_INTERVAL}"
  -backups "${VALHEIM_BACKUPS}"
  -backupshort "${VALHEIM_BACKUP_SHORT}"
  -backuplong "${VALHEIM_BACKUP_LONG}"
  -logFile "${VALHEIM_LOG_DIR}/${VALHEIM_NAME}-${VALHEIM_WORLD}.log"
  -instanceid "${VALHEIM_INSTANCEID}"
);
[[ "${VALHEIM_CROSSPLAY_ENABLED^^}" = 'TRUE' ]] && _options+=(-crossplay)
declare -ar _modifier_combat_values=(veryeasy easy hard veryhard)
[[ " ${_modifier_combat_values[*]} " =~ " ${VALHEIM_MODIFIER_COMBAT:-_nope_} " ]] && _options+=('-modifier' 'combat' "${VALHEIM_MODIFIER_COMBAT}")
declare -ar _modifier_deathpenalty_values=(casual veryeasy easy hard hardcore)
[[ " ${_modifier_deathpenalty_values[*]} " =~ " ${VALHEIM_MODIFIER_DEATHPENALTY:-_nope_} " ]] && _options+=('-modifier' 'deathpenalty' "${VALHEIM_MODIFIER_DEATHPENALTY}")
declare -ar _modifier_portals_values=(casual hard veryhard)
[[ " ${_modifier_portals_values[*]} " =~ " ${VALHEIM_MODIFIER_PORTALS:-_nope_} " ]] && _options+=('-modifier' 'portals' "${VALHEIM_MODIFIER_PORTALS}")
declare -ar _modifier_raids_values=(none muchless less more muchmore)
[[ " ${_modifier_raids_values[*]} " =~ " ${VALHEIM_MODIFIER_RAIDS:-_nope_} " ]] && _options+=('-modifier' 'raids' "${VALHEIM_MODIFIER_RAIDS}")
declare -ar _modifier_resources_values=(muchless less more muchmore most)
[[ " ${_modifier_resources_values[*]} " =~ " ${VALHEIM_MODIFIER_RESOURCES:-_nope_} " ]] && _options+=('-modifier' 'resources' "${VALHEIM_MODIFIER_RESOURCES}")
[[ "${VALHEIM_MODIFIER_NOBUILDCOST^^}" = 'TRUE' ]] && _options+=(-setkey nobuildcost)
[[ "${VALHEIM_MODIFIER_PLAYEREVENTS^^}" = 'TRUE' ]] && _options+=(-setkey playerevents)
[[ "${VALHEIM_MODIFIER_PASSIVEMOBS^^}" = 'TRUE' ]] && _options+=(-setkey passivemobs)
[[ "${VALHEIM_MODIFIER_NOMAP^^}" = 'TRUE' ]] && _options+=(-setkey nomap)

###
# process
###
[ -d "${VALHEIM_SAVE_DIR:-/}" ] || mkdir -p "${VALHEIM_SAVE_DIR}"

# update, if allowed .
if [[  "${VALHEIM_SERVER_UPDATE_ENABLED^^}" = 'TRUE' ]]; then 
  declare -r tempLdLibPath="${LD_LIBRARY_PATH}"
  ${STEAM_HOME}/valheim_server.update
  export LD_LIBRARY_PATH=${tempLdLibPath}
fi

# start Valheim Server .
export LD_LIBRARY_PATH=${VALHEIM_HOME}/linux64:${STEAM_LIBS_64}:${tempLdLibPath}
export SteamAppId=${VALHEIM_STEAMAPP_ID}

/usr/local/bin/box64 ${VALHEIM_HOME}/valheim_server.x86_64 "${_options[@]}";

trap "kill -SIGINT $!;" SIGTERM

# Wait for server to exit
while wait $!; [ $? != 0 ]; do true; done

export LD_LIBRARY_PATH=${tempLdLibPath}
